/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MfaAmrClaim as PrismaMfaAmrClaim,
  Session as PrismaSession,
} from "@prisma/client";

export class MfaAmrClaimServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MfaAmrClaimCountArgs, "select">
  ): Promise<number> {
    return this.prisma.mfaAmrClaim.count(args);
  }

  async mfaAmrClaims(
    args: Prisma.MfaAmrClaimFindManyArgs
  ): Promise<PrismaMfaAmrClaim[]> {
    return this.prisma.mfaAmrClaim.findMany(args);
  }
  async mfaAmrClaim(
    args: Prisma.MfaAmrClaimFindUniqueArgs
  ): Promise<PrismaMfaAmrClaim | null> {
    return this.prisma.mfaAmrClaim.findUnique(args);
  }
  async createMfaAmrClaim(
    args: Prisma.MfaAmrClaimCreateArgs
  ): Promise<PrismaMfaAmrClaim> {
    return this.prisma.mfaAmrClaim.create(args);
  }
  async updateMfaAmrClaim(
    args: Prisma.MfaAmrClaimUpdateArgs
  ): Promise<PrismaMfaAmrClaim> {
    return this.prisma.mfaAmrClaim.update(args);
  }
  async deleteMfaAmrClaim(
    args: Prisma.MfaAmrClaimDeleteArgs
  ): Promise<PrismaMfaAmrClaim> {
    return this.prisma.mfaAmrClaim.delete(args);
  }

  async getSessions(parentId: string): Promise<PrismaSession | null> {
    return this.prisma.mfaAmrClaim
      .findUnique({
        where: { id: parentId },
      })
      .sessions();
  }
}
