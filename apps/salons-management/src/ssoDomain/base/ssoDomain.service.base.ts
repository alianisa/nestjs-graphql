/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SsoDomain as PrismaSsoDomain,
  SsoProvider as PrismaSsoProvider,
} from "@prisma/client";

export class SsoDomainServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SsoDomainCountArgs, "select">
  ): Promise<number> {
    return this.prisma.ssoDomain.count(args);
  }

  async ssoDomains(
    args: Prisma.SsoDomainFindManyArgs
  ): Promise<PrismaSsoDomain[]> {
    return this.prisma.ssoDomain.findMany(args);
  }
  async ssoDomain(
    args: Prisma.SsoDomainFindUniqueArgs
  ): Promise<PrismaSsoDomain | null> {
    return this.prisma.ssoDomain.findUnique(args);
  }
  async createSsoDomain(
    args: Prisma.SsoDomainCreateArgs
  ): Promise<PrismaSsoDomain> {
    return this.prisma.ssoDomain.create(args);
  }
  async updateSsoDomain(
    args: Prisma.SsoDomainUpdateArgs
  ): Promise<PrismaSsoDomain> {
    return this.prisma.ssoDomain.update(args);
  }
  async deleteSsoDomain(
    args: Prisma.SsoDomainDeleteArgs
  ): Promise<PrismaSsoDomain> {
    return this.prisma.ssoDomain.delete(args);
  }

  async getSsoProviders(parentId: string): Promise<PrismaSsoProvider | null> {
    return this.prisma.ssoDomain
      .findUnique({
        where: { id: parentId },
      })
      .ssoProviders();
  }
}
