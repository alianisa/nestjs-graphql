/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  EmployeeDailyStat as PrismaEmployeeDailyStat,
  Salon as PrismaSalon,
  UserProfile as PrismaUserProfile,
} from "@prisma/client";

export class EmployeeDailyStatServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmployeeDailyStatCountArgs, "select">
  ): Promise<number> {
    return this.prisma.employeeDailyStat.count(args);
  }

  async employeeDailyStats(
    args: Prisma.EmployeeDailyStatFindManyArgs
  ): Promise<PrismaEmployeeDailyStat[]> {
    return this.prisma.employeeDailyStat.findMany(args);
  }
  async employeeDailyStat(
    args: Prisma.EmployeeDailyStatFindUniqueArgs
  ): Promise<PrismaEmployeeDailyStat | null> {
    return this.prisma.employeeDailyStat.findUnique(args);
  }
  async createEmployeeDailyStat(
    args: Prisma.EmployeeDailyStatCreateArgs
  ): Promise<PrismaEmployeeDailyStat> {
    return this.prisma.employeeDailyStat.create(args);
  }
  async updateEmployeeDailyStat(
    args: Prisma.EmployeeDailyStatUpdateArgs
  ): Promise<PrismaEmployeeDailyStat> {
    return this.prisma.employeeDailyStat.update(args);
  }
  async deleteEmployeeDailyStat(
    args: Prisma.EmployeeDailyStatDeleteArgs
  ): Promise<PrismaEmployeeDailyStat> {
    return this.prisma.employeeDailyStat.delete(args);
  }

  async getSalons(parentId: string): Promise<PrismaSalon | null> {
    return this.prisma.employeeDailyStat
      .findUnique({
        where: { id: parentId },
      })
      .salons();
  }

  async getUserProfiles(parentId: string): Promise<PrismaUserProfile | null> {
    return this.prisma.employeeDailyStat
      .findUnique({
        where: { id: parentId },
      })
      .userProfiles();
  }
}
