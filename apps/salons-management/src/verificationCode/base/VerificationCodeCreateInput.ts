/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  Max,
  IsString,
  MaxLength,
  IsDate,
  IsOptional,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumVerificationCodeStatus } from "./EnumVerificationCodeStatus";
import { EnumVerificationCodeVerificationType } from "./EnumVerificationCodeVerificationType";

@InputType()
class VerificationCodeCreateInput {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  attempts!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  code!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  expiresAt!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  maxAttempts!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  messageId?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  metadata?: InputJsonValue;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  phone!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  providerId!: string;

  @ApiProperty({
    required: true,
    enum: EnumVerificationCodeStatus,
  })
  @IsEnum(EnumVerificationCodeStatus)
  @Field(() => EnumVerificationCodeStatus)
  status!: "pending" | "verified" | "expired" | "failed";

  @ApiProperty({
    required: true,
    enum: EnumVerificationCodeVerificationType,
  })
  @IsEnum(EnumVerificationCodeVerificationType)
  @Field(() => EnumVerificationCodeVerificationType)
  verification_type!: "sms" | "call";

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  verifiedAt?: Date | null;
}

export { VerificationCodeCreateInput as VerificationCodeCreateInput };
