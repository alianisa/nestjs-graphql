/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  IsDate,
  ValidateNested,
  IsInt,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { EmployeeTaskCreateNestedManyWithoutQueuesInput } from "./EmployeeTaskCreateNestedManyWithoutQueuesInput";
import { OrderCreateNestedManyWithoutQueuesInput } from "./OrderCreateNestedManyWithoutQueuesInput";
import { OrderWhereUniqueInput } from "../../order/base/OrderWhereUniqueInput";
import { SalonWhereUniqueInput } from "../../salon/base/SalonWhereUniqueInput";
import { UserProfileWhereUniqueInput } from "../../userProfile/base/UserProfileWhereUniqueInput";

@InputType()
class QueueCreateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  completed?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  completedAt?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeTaskCreateNestedManyWithoutQueuesInput,
  })
  @ValidateNested()
  @Type(() => EmployeeTaskCreateNestedManyWithoutQueuesInput)
  @IsOptional()
  @Field(() => EmployeeTaskCreateNestedManyWithoutQueuesInput, {
    nullable: true,
  })
  employeeTasks?: EmployeeTaskCreateNestedManyWithoutQueuesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  estimatedWaitTime?: number | null;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutQueuesInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutQueuesInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutQueuesInput, {
    nullable: true,
  })
  ordersOrdersQueueIdToqueues?: OrderCreateNestedManyWithoutQueuesInput;

  @ApiProperty({
    required: false,
    type: () => OrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderWhereUniqueInput, {
    nullable: true,
  })
  ordersQueuesOrderIdToorders?: OrderWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  queueNumber?: number | null;

  @ApiProperty({
    required: false,
    type: () => SalonWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SalonWhereUniqueInput)
  @IsOptional()
  @Field(() => SalonWhereUniqueInput, {
    nullable: true,
  })
  salons?: SalonWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserProfileWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserProfileWhereUniqueInput)
  @IsOptional()
  @Field(() => UserProfileWhereUniqueInput, {
    nullable: true,
  })
  userProfilesQueuesEmployeeIdTouserProfiles?: UserProfileWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserProfileWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserProfileWhereUniqueInput)
  @IsOptional()
  @Field(() => UserProfileWhereUniqueInput, {
    nullable: true,
  })
  userProfilesQueuesUserIdTouserProfiles?: UserProfileWhereUniqueInput | null;
}

export { QueueCreateInput as QueueCreateInput };
