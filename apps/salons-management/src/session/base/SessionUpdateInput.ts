/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumSessionAal } from "./EnumSessionAal";
import {
  IsEnum,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { MfaAmrClaimUpdateManyWithoutSessionsInput } from "./MfaAmrClaimUpdateManyWithoutSessionsInput";
import { RefreshTokenUpdateManyWithoutSessionsInput } from "./RefreshTokenUpdateManyWithoutSessionsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class SessionUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumSessionAal,
  })
  @IsEnum(EnumSessionAal)
  @IsOptional()
  @Field(() => EnumSessionAal, {
    nullable: true,
  })
  aal?: "aal1" | "aal2" | "aal3" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  factorId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ip?: string | null;

  @ApiProperty({
    required: false,
    type: () => MfaAmrClaimUpdateManyWithoutSessionsInput,
  })
  @ValidateNested()
  @Type(() => MfaAmrClaimUpdateManyWithoutSessionsInput)
  @IsOptional()
  @Field(() => MfaAmrClaimUpdateManyWithoutSessionsInput, {
    nullable: true,
  })
  mfaAmrClaims?: MfaAmrClaimUpdateManyWithoutSessionsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  notAfter?: Date | null;

  @ApiProperty({
    required: false,
    type: () => RefreshTokenUpdateManyWithoutSessionsInput,
  })
  @ValidateNested()
  @Type(() => RefreshTokenUpdateManyWithoutSessionsInput)
  @IsOptional()
  @Field(() => RefreshTokenUpdateManyWithoutSessionsInput, {
    nullable: true,
  })
  refreshTokens?: RefreshTokenUpdateManyWithoutSessionsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  refreshedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tag?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userAgent?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  users?: UserWhereUniqueInput;
}

export { SessionUpdateInput as SessionUpdateInput };
