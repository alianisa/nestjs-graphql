/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsDate,
} from "class-validator";
import { AttendanceUpdateManyWithoutSalonsInput } from "./AttendanceUpdateManyWithoutSalonsInput";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EmployeeDailyStatUpdateManyWithoutSalonsInput } from "./EmployeeDailyStatUpdateManyWithoutSalonsInput";
import { EmployeeStatUpdateManyWithoutSalonsInput } from "./EmployeeStatUpdateManyWithoutSalonsInput";
import { EmployeeTaskUpdateManyWithoutSalonsInput } from "./EmployeeTaskUpdateManyWithoutSalonsInput";
import { EmployeeWorkScheduleUpdateManyWithoutSalonsInput } from "./EmployeeWorkScheduleUpdateManyWithoutSalonsInput";
import { OrderUpdateManyWithoutSalonsInput } from "./OrderUpdateManyWithoutSalonsInput";
import { QueueUpdateManyWithoutSalonsInput } from "./QueueUpdateManyWithoutSalonsInput";
import { SalonAccountUpdateManyWithoutSalonsInput } from "./SalonAccountUpdateManyWithoutSalonsInput";
import { SalonRatingLikeUpdateManyWithoutSalonsInput } from "./SalonRatingLikeUpdateManyWithoutSalonsInput";
import { SalonRatingUpdateManyWithoutSalonsInput } from "./SalonRatingUpdateManyWithoutSalonsInput";
import { SalonServiceUpdateManyWithoutSalonsInput } from "./SalonServiceUpdateManyWithoutSalonsInput";
import { TimeSlotUpdateManyWithoutSalonsInput } from "./TimeSlotUpdateManyWithoutSalonsInput";
import { UserAccountUpdateManyWithoutSalonsInput } from "./UserAccountUpdateManyWithoutSalonsInput";
import { UserFavoriteSalonUpdateManyWithoutSalonsInput } from "./UserFavoriteSalonUpdateManyWithoutSalonsInput";
import { UserProfileWhereUniqueInput } from "../../userProfile/base/UserProfileWhereUniqueInput";
import { UserProfileUpdateManyWithoutSalonsInput } from "./UserProfileUpdateManyWithoutSalonsInput";

@InputType()
class SalonUpdateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  active?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => AttendanceUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => AttendanceUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  attendances?: AttendanceUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  barbers?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  categories?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  closeTime?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeDailyStatUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDailyStatUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => EmployeeDailyStatUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  employeeDailyStats?: EmployeeDailyStatUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeStatUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeStatUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => EmployeeStatUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  employeeStats?: EmployeeStatUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeTaskUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeTaskUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => EmployeeTaskUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  employeeTasks?: EmployeeTaskUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeWorkScheduleUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeWorkScheduleUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => EmployeeWorkScheduleUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  employeeWorkSchedules?: EmployeeWorkScheduleUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  images?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  img?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  latLng?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  location?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  open?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  openTime?: Date | null;

  @ApiProperty({
    required: false,
    type: () => OrderUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => OrderUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => OrderUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  orders?: OrderUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string;

  @ApiProperty({
    required: false,
    type: () => QueueUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => QueueUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => QueueUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  queues?: QueueUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => SalonAccountUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => SalonAccountUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => SalonAccountUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  salonAccounts?: SalonAccountUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => SalonRatingLikeUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => SalonRatingLikeUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => SalonRatingLikeUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  salonRatingLikes?: SalonRatingLikeUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => SalonRatingUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => SalonRatingUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => SalonRatingUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  salonRatings?: SalonRatingUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => SalonServiceUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => SalonServiceUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => SalonServiceUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  salonServices?: SalonServiceUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => TimeSlotUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => TimeSlotUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => TimeSlotUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  timeSlots?: TimeSlotUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  timezone?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserAccountUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => UserAccountUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => UserAccountUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  userAccounts?: UserAccountUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => UserFavoriteSalonUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => UserFavoriteSalonUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => UserFavoriteSalonUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  userFavoriteSalons?: UserFavoriteSalonUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => UserProfileWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserProfileWhereUniqueInput)
  @IsOptional()
  @Field(() => UserProfileWhereUniqueInput, {
    nullable: true,
  })
  userProfilesSalonsSalonAdminIdTouserProfiles?: UserProfileWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserProfileUpdateManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => UserProfileUpdateManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => UserProfileUpdateManyWithoutSalonsInput, {
    nullable: true,
  })
  userProfilesUserProfilesSalonIdTosalons?: UserProfileUpdateManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  website?: string | null;
}

export { SalonUpdateInput as SalonUpdateInput };
