/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsDate,
} from "class-validator";
import { AttendanceCreateNestedManyWithoutSalonsInput } from "./AttendanceCreateNestedManyWithoutSalonsInput";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EmployeeDailyStatCreateNestedManyWithoutSalonsInput } from "./EmployeeDailyStatCreateNestedManyWithoutSalonsInput";
import { EmployeeStatCreateNestedManyWithoutSalonsInput } from "./EmployeeStatCreateNestedManyWithoutSalonsInput";
import { EmployeeTaskCreateNestedManyWithoutSalonsInput } from "./EmployeeTaskCreateNestedManyWithoutSalonsInput";
import { EmployeeWorkScheduleCreateNestedManyWithoutSalonsInput } from "./EmployeeWorkScheduleCreateNestedManyWithoutSalonsInput";
import { OrderCreateNestedManyWithoutSalonsInput } from "./OrderCreateNestedManyWithoutSalonsInput";
import { QueueCreateNestedManyWithoutSalonsInput } from "./QueueCreateNestedManyWithoutSalonsInput";
import { SalonAccountCreateNestedManyWithoutSalonsInput } from "./SalonAccountCreateNestedManyWithoutSalonsInput";
import { SalonRatingLikeCreateNestedManyWithoutSalonsInput } from "./SalonRatingLikeCreateNestedManyWithoutSalonsInput";
import { SalonRatingCreateNestedManyWithoutSalonsInput } from "./SalonRatingCreateNestedManyWithoutSalonsInput";
import { SalonServiceCreateNestedManyWithoutSalonsInput } from "./SalonServiceCreateNestedManyWithoutSalonsInput";
import { TimeSlotCreateNestedManyWithoutSalonsInput } from "./TimeSlotCreateNestedManyWithoutSalonsInput";
import { UserAccountCreateNestedManyWithoutSalonsInput } from "./UserAccountCreateNestedManyWithoutSalonsInput";
import { UserFavoriteSalonCreateNestedManyWithoutSalonsInput } from "./UserFavoriteSalonCreateNestedManyWithoutSalonsInput";
import { UserProfileWhereUniqueInput } from "../../userProfile/base/UserProfileWhereUniqueInput";
import { UserProfileCreateNestedManyWithoutSalonsInput } from "./UserProfileCreateNestedManyWithoutSalonsInput";

@InputType()
class SalonCreateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  active?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => AttendanceCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => AttendanceCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  attendances?: AttendanceCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  barbers?: string | null;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  categories!: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  closeTime?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeDailyStatCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDailyStatCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => EmployeeDailyStatCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  employeeDailyStats?: EmployeeDailyStatCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeStatCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeStatCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => EmployeeStatCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  employeeStats?: EmployeeStatCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeTaskCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeTaskCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => EmployeeTaskCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  employeeTasks?: EmployeeTaskCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeWorkScheduleCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeWorkScheduleCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => EmployeeWorkScheduleCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  employeeWorkSchedules?: EmployeeWorkScheduleCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  images!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  img?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  latLng?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  location?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  open?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  openTime?: Date | null;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  phone!: string;

  @ApiProperty({
    required: false,
    type: () => QueueCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => QueueCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => QueueCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  queues?: QueueCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => SalonAccountCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => SalonAccountCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => SalonAccountCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  salonAccounts?: SalonAccountCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => SalonRatingLikeCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => SalonRatingLikeCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => SalonRatingLikeCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  salonRatingLikes?: SalonRatingLikeCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => SalonRatingCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => SalonRatingCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => SalonRatingCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  salonRatings?: SalonRatingCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => SalonServiceCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => SalonServiceCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => SalonServiceCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  salonServices?: SalonServiceCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => TimeSlotCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => TimeSlotCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => TimeSlotCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  timeSlots?: TimeSlotCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  timezone!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserAccountCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => UserAccountCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => UserAccountCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  userAccounts?: UserAccountCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => UserFavoriteSalonCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => UserFavoriteSalonCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => UserFavoriteSalonCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  userFavoriteSalons?: UserFavoriteSalonCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: () => UserProfileWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserProfileWhereUniqueInput)
  @IsOptional()
  @Field(() => UserProfileWhereUniqueInput, {
    nullable: true,
  })
  userProfilesSalonsSalonAdminIdTouserProfiles?: UserProfileWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserProfileCreateNestedManyWithoutSalonsInput,
  })
  @ValidateNested()
  @Type(() => UserProfileCreateNestedManyWithoutSalonsInput)
  @IsOptional()
  @Field(() => UserProfileCreateNestedManyWithoutSalonsInput, {
    nullable: true,
  })
  userProfilesUserProfilesSalonIdTosalons?: UserProfileCreateNestedManyWithoutSalonsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  website?: string | null;
}

export { SalonCreateInput as SalonCreateInput };
