/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { AttendanceListRelationFilter } from "../../attendance/base/AttendanceListRelationFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EmployeeDailyStatListRelationFilter } from "../../employeeDailyStat/base/EmployeeDailyStatListRelationFilter";
import { EmployeeStatListRelationFilter } from "../../employeeStat/base/EmployeeStatListRelationFilter";
import { EmployeeTaskListRelationFilter } from "../../employeeTask/base/EmployeeTaskListRelationFilter";
import { EmployeeWorkScheduleListRelationFilter } from "../../employeeWorkSchedule/base/EmployeeWorkScheduleListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { OrderListRelationFilter } from "../../order/base/OrderListRelationFilter";
import { QueueListRelationFilter } from "../../queue/base/QueueListRelationFilter";
import { SalonAccountListRelationFilter } from "../../salonAccount/base/SalonAccountListRelationFilter";
import { SalonRatingLikeListRelationFilter } from "../../salonRatingLike/base/SalonRatingLikeListRelationFilter";
import { SalonRatingListRelationFilter } from "../../salonRating/base/SalonRatingListRelationFilter";
import { SalonServiceListRelationFilter } from "../../salonService/base/SalonServiceListRelationFilter";
import { TimeSlotListRelationFilter } from "../../timeSlot/base/TimeSlotListRelationFilter";
import { UserAccountListRelationFilter } from "../../userAccount/base/UserAccountListRelationFilter";
import { UserFavoriteSalonListRelationFilter } from "../../userFavoriteSalon/base/UserFavoriteSalonListRelationFilter";
import { UserProfileWhereUniqueInput } from "../../userProfile/base/UserProfileWhereUniqueInput";
import { UserProfileListRelationFilter } from "../../userProfile/base/UserProfileListRelationFilter";

@InputType()
class SalonWhereInput {
  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  active?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  address?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => AttendanceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AttendanceListRelationFilter)
  @IsOptional()
  @Field(() => AttendanceListRelationFilter, {
    nullable: true,
  })
  attendances?: AttendanceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  barbers?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  categories?: JsonFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  closeTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  createdAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeDailyStatListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeDailyStatListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeDailyStatListRelationFilter, {
    nullable: true,
  })
  employeeDailyStats?: EmployeeDailyStatListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeStatListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeStatListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeStatListRelationFilter, {
    nullable: true,
  })
  employeeStats?: EmployeeStatListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeTaskListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeTaskListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeTaskListRelationFilter, {
    nullable: true,
  })
  employeeTasks?: EmployeeTaskListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeWorkScheduleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeWorkScheduleListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeWorkScheduleListRelationFilter, {
    nullable: true,
  })
  employeeWorkSchedules?: EmployeeWorkScheduleListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  images?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  img?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  latLng?: JsonFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  location?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  logo?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  open?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  openTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => OrderListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrderListRelationFilter)
  @IsOptional()
  @Field(() => OrderListRelationFilter, {
    nullable: true,
  })
  orders?: OrderListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  phone?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => QueueListRelationFilter,
  })
  @ValidateNested()
  @Type(() => QueueListRelationFilter)
  @IsOptional()
  @Field(() => QueueListRelationFilter, {
    nullable: true,
  })
  queues?: QueueListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SalonAccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SalonAccountListRelationFilter)
  @IsOptional()
  @Field(() => SalonAccountListRelationFilter, {
    nullable: true,
  })
  salonAccounts?: SalonAccountListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SalonRatingLikeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SalonRatingLikeListRelationFilter)
  @IsOptional()
  @Field(() => SalonRatingLikeListRelationFilter, {
    nullable: true,
  })
  salonRatingLikes?: SalonRatingLikeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SalonRatingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SalonRatingListRelationFilter)
  @IsOptional()
  @Field(() => SalonRatingListRelationFilter, {
    nullable: true,
  })
  salonRatings?: SalonRatingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SalonServiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SalonServiceListRelationFilter)
  @IsOptional()
  @Field(() => SalonServiceListRelationFilter, {
    nullable: true,
  })
  salonServices?: SalonServiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimeSlotListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimeSlotListRelationFilter)
  @IsOptional()
  @Field(() => TimeSlotListRelationFilter, {
    nullable: true,
  })
  timeSlots?: TimeSlotListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  timezone?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserAccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserAccountListRelationFilter)
  @IsOptional()
  @Field(() => UserAccountListRelationFilter, {
    nullable: true,
  })
  userAccounts?: UserAccountListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserFavoriteSalonListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserFavoriteSalonListRelationFilter)
  @IsOptional()
  @Field(() => UserFavoriteSalonListRelationFilter, {
    nullable: true,
  })
  userFavoriteSalons?: UserFavoriteSalonListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserProfileWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserProfileWhereUniqueInput)
  @IsOptional()
  @Field(() => UserProfileWhereUniqueInput, {
    nullable: true,
  })
  userProfilesSalonsSalonAdminIdTouserProfiles?: UserProfileWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserProfileListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserProfileListRelationFilter)
  @IsOptional()
  @Field(() => UserProfileListRelationFilter, {
    nullable: true,
  })
  userProfilesUserProfilesSalonIdTosalons?: UserProfileListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  website?: StringNullableFilter;
}

export { SalonWhereInput as SalonWhereInput };
