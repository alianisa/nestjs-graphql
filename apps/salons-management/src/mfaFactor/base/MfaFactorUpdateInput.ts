/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsEnum,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumMfaFactorFactorType } from "./EnumMfaFactorFactorType";
import { MfaChallengeUpdateManyWithoutMfaFactorsInput } from "./MfaChallengeUpdateManyWithoutMfaFactorsInput";
import { EnumMfaFactorStatus } from "./EnumMfaFactorStatus";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";

@InputType()
class MfaFactorUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt?: Date;

  @ApiProperty({
    required: false,
    enum: EnumMfaFactorFactorType,
  })
  @IsEnum(EnumMfaFactorFactorType)
  @IsOptional()
  @Field(() => EnumMfaFactorFactorType, {
    nullable: true,
  })
  factor_type?: "totp" | "webauthn" | "phone";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  friendlyName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  lastChallengedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => MfaChallengeUpdateManyWithoutMfaFactorsInput,
  })
  @ValidateNested()
  @Type(() => MfaChallengeUpdateManyWithoutMfaFactorsInput)
  @IsOptional()
  @Field(() => MfaChallengeUpdateManyWithoutMfaFactorsInput, {
    nullable: true,
  })
  mfaChallenges?: MfaChallengeUpdateManyWithoutMfaFactorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  secret?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumMfaFactorStatus,
  })
  @IsEnum(EnumMfaFactorStatus)
  @IsOptional()
  @Field(() => EnumMfaFactorStatus, {
    nullable: true,
  })
  status?: "unverified" | "verified";

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  users?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  webAuthnAaguid?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  webAuthnCredential?: InputJsonValue;
}

export { MfaFactorUpdateInput as MfaFactorUpdateInput };
