syntax = "proto3";

                 package mfaFactor;
service MfaFactorService {
 rpc createMfaFactor (MfaFactorCreateInput) returns (MfaFactor) {}
rpc mfaFactors (findManyParams) returns (stream MfaFactor) {}
rpc mfaFactor (MfaFactorWhereUniqueInput) returns (MfaFactor) {}
rpc updateMfaFactor (MfaFactorUpdateInput) returns (MfaFactor) {}
rpc deleteMfaFactor (MfaFactorWhereUniqueInput) returns (MfaFactor) {}
rpc findManyMfaFactors (MfaFactorWhereUniqueInput) returns (stream MfaChallenge) {}
rpc updateMfaFactors (MfaChallengeParams) returns (stream MfaChallenge) {}
rpc connectMfaFactors (MfaChallengeParams) returns (MfaChallenge) {}
rpc disconnectMfaFactors (MfaChallengeParams) returns (MfaChallenge) {} 
 }
message MfaFactorCreateInput {
string createdAt = 1;
repeated string factor_type = 2;
string friendlyName = 3;
string id = 4;
string lastChallengedAt = 5;
repeated MfaChallenge mfaChallenges = 6;
string phone = 7;
string secret = 8;
repeated string status = 9;
string updatedAt = 10;
string webAuthnAaguid = 11;
string webAuthnCredential = 12;
};
message MfaFactor {
string createdAt = 1;
repeated string factor_type = 2;
string friendlyName = 3;
string id = 4;
string lastChallengedAt = 5;
repeated MfaChallenge mfaChallenges = 6;
string phone = 7;
string secret = 8;
repeated string status = 9;
string updatedAt = 10;
string webAuthnAaguid = 11;
string webAuthnCredential = 12;
};
message MfaFactorWhereUniqueInput {
string createdAt = 1;
repeated string factor_type = 2;
string friendlyName = 3;
string id = 4;
string lastChallengedAt = 5;
repeated MfaChallenge mfaChallenges = 6;
string phone = 7;
string secret = 8;
repeated string status = 9;
string updatedAt = 10;
string webAuthnAaguid = 11;
string webAuthnCredential = 12;
};
message MfaFactorUpdateInput {
string createdAt = 1;
repeated string factor_type = 2;
string friendlyName = 3;
string id = 4;
string lastChallengedAt = 5;
repeated MfaChallenge mfaChallenges = 6;
string phone = 7;
string secret = 8;
repeated string status = 9;
string updatedAt = 10;
string webAuthnAaguid = 11;
string webAuthnCredential = 12;
};
message findManyParams {

};
message MfaChallenge {
string createdAt = 1;
string id = 2;
string ipAddress = 3;
string otpCode = 4;
string verifiedAt = 5;
string webAuthnSessionData = 6;
};
message MfaChallengeWhereUniqueInput {
string createdAt = 1;
string id = 2;
string ipAddress = 3;
string otpCode = 4;
string verifiedAt = 5;
string webAuthnSessionData = 6;
};
message MfaChallengeParams {
MfaFactorWhereUniqueInput mfaFactorWhereUniqueInput = 1;
MfaChallengeWhereUniqueInput mfachallengeWhereUniqueInput = 2;
};