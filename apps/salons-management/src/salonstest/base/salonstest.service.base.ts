/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Salonstest as PrismaSalonstest } from "@prisma/client";

export class SalonstestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalonstestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salonstest.count(args);
  }

  async salonstests(
    args: Prisma.SalonstestFindManyArgs
  ): Promise<PrismaSalonstest[]> {
    return this.prisma.salonstest.findMany(args);
  }
  async salonstest(
    args: Prisma.SalonstestFindUniqueArgs
  ): Promise<PrismaSalonstest | null> {
    return this.prisma.salonstest.findUnique(args);
  }
  async createSalonstest(
    args: Prisma.SalonstestCreateArgs
  ): Promise<PrismaSalonstest> {
    return this.prisma.salonstest.create(args);
  }
  async updateSalonstest(
    args: Prisma.SalonstestUpdateArgs
  ): Promise<PrismaSalonstest> {
    return this.prisma.salonstest.update(args);
  }
  async deleteSalonstest(
    args: Prisma.SalonstestDeleteArgs
  ): Promise<PrismaSalonstest> {
    return this.prisma.salonstest.delete(args);
  }
}
