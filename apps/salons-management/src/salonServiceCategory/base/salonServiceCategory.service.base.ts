/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  SalonServiceCategory as PrismaSalonServiceCategory,
  SalonService as PrismaSalonService,
} from "@prisma/client";

export class SalonServiceCategoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalonServiceCategoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salonServiceCategory.count(args);
  }

  async salonServiceCategories(
    args: Prisma.SalonServiceCategoryFindManyArgs
  ): Promise<PrismaSalonServiceCategory[]> {
    return this.prisma.salonServiceCategory.findMany(args);
  }
  async salonServiceCategory(
    args: Prisma.SalonServiceCategoryFindUniqueArgs
  ): Promise<PrismaSalonServiceCategory | null> {
    return this.prisma.salonServiceCategory.findUnique(args);
  }
  async createSalonServiceCategory(
    args: Prisma.SalonServiceCategoryCreateArgs
  ): Promise<PrismaSalonServiceCategory> {
    return this.prisma.salonServiceCategory.create(args);
  }
  async updateSalonServiceCategory(
    args: Prisma.SalonServiceCategoryUpdateArgs
  ): Promise<PrismaSalonServiceCategory> {
    return this.prisma.salonServiceCategory.update(args);
  }
  async deleteSalonServiceCategory(
    args: Prisma.SalonServiceCategoryDeleteArgs
  ): Promise<PrismaSalonServiceCategory> {
    return this.prisma.salonServiceCategory.delete(args);
  }

  async findSalonServices(
    parentId: string,
    args: Prisma.SalonServiceFindManyArgs
  ): Promise<PrismaSalonService[]> {
    return this.prisma.salonServiceCategory
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .salonServices(args);
  }
}
