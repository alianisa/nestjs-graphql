/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { AppointmentWhereUniqueInput } from "../../appointment/base/AppointmentWhereUniqueInput";
import { IntFilter } from "../../util/IntFilter";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumEmployeeTaskOrderType } from "./EnumEmployeeTaskOrderType";
import { OrderWhereUniqueInput } from "../../order/base/OrderWhereUniqueInput";
import { QueueWhereUniqueInput } from "../../queue/base/QueueWhereUniqueInput";
import { SalonWhereUniqueInput } from "../../salon/base/SalonWhereUniqueInput";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { EnumEmployeeTaskTaskStatus } from "./EnumEmployeeTaskTaskStatus";
import { UserProfileWhereUniqueInput } from "../../userProfile/base/UserProfileWhereUniqueInput";

@InputType()
class EmployeeTaskWhereInput {
  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  actualDuration?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  actualStartTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => AppointmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AppointmentWhereUniqueInput)
  @IsOptional()
  @Field(() => AppointmentWhereUniqueInput, {
    nullable: true,
  })
  appointments?: AppointmentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  completedAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  createdAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  estimatedDuration?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  notes?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumEmployeeTaskOrderType,
  })
  @IsEnum(EnumEmployeeTaskOrderType)
  @IsOptional()
  @Field(() => EnumEmployeeTaskOrderType, {
    nullable: true,
  })
  order_type?: "appointment" | "queue";

  @ApiProperty({
    required: false,
    type: () => OrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderWhereUniqueInput, {
    nullable: true,
  })
  orders?: OrderWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => QueueWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => QueueWhereUniqueInput)
  @IsOptional()
  @Field(() => QueueWhereUniqueInput, {
    nullable: true,
  })
  queues?: QueueWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SalonWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SalonWhereUniqueInput)
  @IsOptional()
  @Field(() => SalonWhereUniqueInput, {
    nullable: true,
  })
  salons?: SalonWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  scheduledStartTime?: DateTimeFilter;

  @ApiProperty({
    required: false,
    enum: EnumEmployeeTaskTaskStatus,
  })
  @IsEnum(EnumEmployeeTaskTaskStatus)
  @IsOptional()
  @Field(() => EnumEmployeeTaskTaskStatus, {
    nullable: true,
  })
  task_status?:
    | "NOT_STARTED"
    | "WITH_MASTER"
    | "IN_PROGRESS"
    | "COMPLETED"
    | "CANCELLED";

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserProfileWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserProfileWhereUniqueInput)
  @IsOptional()
  @Field(() => UserProfileWhereUniqueInput, {
    nullable: true,
  })
  userProfiles?: UserProfileWhereUniqueInput;
}

export { EmployeeTaskWhereInput as EmployeeTaskWhereInput };
