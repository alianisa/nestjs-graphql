/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsInt,
  Max,
  IsOptional,
  IsDate,
  ValidateNested,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";

import { Type } from "class-transformer";
import { Appointment } from "../../appointment/base/Appointment";
import { EnumEmployeeTaskOrderType } from "./EnumEmployeeTaskOrderType";
import { Order } from "../../order/base/Order";
import { Queue } from "../../queue/base/Queue";
import { Salon } from "../../salon/base/Salon";
import { EnumEmployeeTaskTaskStatus } from "./EnumEmployeeTaskTaskStatus";
import { UserProfile } from "../../userProfile/base/UserProfile";

@ObjectType()
class EmployeeTask {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  actualDuration!: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  actualStartTime!: Date | null;

  @ApiProperty({
    required: false,
    type: () => Appointment,
  })
  @ValidateNested()
  @Type(() => Appointment)
  @IsOptional()
  appointments?: Appointment | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  completedAt!: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt!: Date | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  estimatedDuration!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notes!: string | null;

  @ApiProperty({
    required: true,
    enum: EnumEmployeeTaskOrderType,
  })
  @IsEnum(EnumEmployeeTaskOrderType)
  @Field(() => EnumEmployeeTaskOrderType, {
    nullable: true,
  })
  order_type?: "appointment" | "queue";

  @ApiProperty({
    required: true,
    type: () => Order,
  })
  @ValidateNested()
  @Type(() => Order)
  orders?: Order;

  @ApiProperty({
    required: false,
    type: () => Queue,
  })
  @ValidateNested()
  @Type(() => Queue)
  @IsOptional()
  queues?: Queue | null;

  @ApiProperty({
    required: true,
    type: () => Salon,
  })
  @ValidateNested()
  @Type(() => Salon)
  salons?: Salon;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  scheduledStartTime!: Date;

  @ApiProperty({
    required: true,
    enum: EnumEmployeeTaskTaskStatus,
  })
  @IsEnum(EnumEmployeeTaskTaskStatus)
  @Field(() => EnumEmployeeTaskTaskStatus, {
    nullable: true,
  })
  task_status?:
    | "NOT_STARTED"
    | "WITH_MASTER"
    | "IN_PROGRESS"
    | "COMPLETED"
    | "CANCELLED";

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt!: Date | null;

  @ApiProperty({
    required: true,
    type: () => UserProfile,
  })
  @ValidateNested()
  @Type(() => UserProfile)
  userProfiles?: UserProfile;
}

export { EmployeeTask as EmployeeTask };
