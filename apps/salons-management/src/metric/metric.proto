syntax = "proto3";

                 package metric;
service MetricService {
 rpc createMetric (MetricCreateInput) returns (Metric) {}
rpc metrics (findManyParams) returns (stream Metric) {}
rpc metric (MetricWhereUniqueInput) returns (Metric) {}
rpc updateMetric (MetricUpdateInput) returns (Metric) {}
rpc deleteMetric (MetricWhereUniqueInput) returns (Metric) {} 
 }
message MetricCreateInput {
int32 duration = 1;
string id = 2;
string metadata = 3;
bool success = 4;
string timestamp = 5;
string typeField = 6;
};
message Metric {
int32 duration = 1;
string id = 2;
string metadata = 3;
bool success = 4;
string timestamp = 5;
string typeField = 6;
};
message MetricWhereUniqueInput {
int32 duration = 1;
string id = 2;
string metadata = 3;
bool success = 4;
string timestamp = 5;
string typeField = 6;
};
message MetricUpdateInput {
int32 duration = 1;
string id = 2;
string metadata = 3;
bool success = 4;
string timestamp = 5;
string typeField = 6;
};
message findManyParams {

};