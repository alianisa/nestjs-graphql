/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsBoolean,
  IsNumber,
  Max,
  ValidateNested,
} from "class-validator";

import { Type } from "class-transformer";
import { Decimal } from "decimal.js";
import { OrderCreateNestedManyWithoutDiscountsInput } from "./OrderCreateNestedManyWithoutDiscountsInput";
import { PromocodeCreateNestedManyWithoutDiscountsInput } from "./PromocodeCreateNestedManyWithoutDiscountsInput";

@InputType()
class DiscountCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  discountType!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  maxDiscountAmount?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  minOrderAmount?: Decimal | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutDiscountsInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutDiscountsInput;

  @ApiProperty({
    required: false,
    type: () => PromocodeCreateNestedManyWithoutDiscountsInput,
  })
  @ValidateNested()
  @Type(() => PromocodeCreateNestedManyWithoutDiscountsInput)
  @IsOptional()
  @Field(() => PromocodeCreateNestedManyWithoutDiscountsInput, {
    nullable: true,
  })
  promocodes?: PromocodeCreateNestedManyWithoutDiscountsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  serviceCategories!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  usageLimit?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  userLimit?: Decimal | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Float)
  value!: Decimal;
}

export { DiscountCreateInput as DiscountCreateInput };
