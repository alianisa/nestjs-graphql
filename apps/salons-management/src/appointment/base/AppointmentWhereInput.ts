/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { EmployeeTaskListRelationFilter } from "../../employeeTask/base/EmployeeTaskListRelationFilter";
import { OrderWhereUniqueInput } from "../../order/base/OrderWhereUniqueInput";
import { OrderListRelationFilter } from "../../order/base/OrderListRelationFilter";
import { TimeSlotWhereUniqueInput } from "../../timeSlot/base/TimeSlotWhereUniqueInput";
import { UserProfileWhereUniqueInput } from "../../userProfile/base/UserProfileWhereUniqueInput";

@InputType()
class AppointmentWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  appointmentDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  employeeId?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeTaskListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeTaskListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeTaskListRelationFilter, {
    nullable: true,
  })
  employeeTasks?: EmployeeTaskListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => OrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderWhereUniqueInput, {
    nullable: true,
  })
  ordersAppointmentsOrderIdToorders?: OrderWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrderListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrderListRelationFilter)
  @IsOptional()
  @Field(() => OrderListRelationFilter, {
    nullable: true,
  })
  ordersOrdersAppointmentIdToappointments?: OrderListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TimeSlotWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TimeSlotWhereUniqueInput)
  @IsOptional()
  @Field(() => TimeSlotWhereUniqueInput, {
    nullable: true,
  })
  timeSlots?: TimeSlotWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserProfileWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserProfileWhereUniqueInput)
  @IsOptional()
  @Field(() => UserProfileWhereUniqueInput, {
    nullable: true,
  })
  userProfiles?: UserProfileWhereUniqueInput;
}

export { AppointmentWhereInput as AppointmentWhereInput };
