/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsString,
  MaxLength,
  ValidateNested,
  IsOptional,
} from "class-validator";
import { Type } from "class-transformer";
import { EmployeeTaskCreateNestedManyWithoutAppointmentsInput } from "./EmployeeTaskCreateNestedManyWithoutAppointmentsInput";
import { OrderWhereUniqueInput } from "../../order/base/OrderWhereUniqueInput";
import { OrderCreateNestedManyWithoutAppointmentsInput } from "./OrderCreateNestedManyWithoutAppointmentsInput";
import { TimeSlotWhereUniqueInput } from "../../timeSlot/base/TimeSlotWhereUniqueInput";
import { UserProfileWhereUniqueInput } from "../../userProfile/base/UserProfileWhereUniqueInput";

@InputType()
class AppointmentCreateInput {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  appointmentDate!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  employeeId!: string;

  @ApiProperty({
    required: false,
    type: () => EmployeeTaskCreateNestedManyWithoutAppointmentsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeTaskCreateNestedManyWithoutAppointmentsInput)
  @IsOptional()
  @Field(() => EmployeeTaskCreateNestedManyWithoutAppointmentsInput, {
    nullable: true,
  })
  employeeTasks?: EmployeeTaskCreateNestedManyWithoutAppointmentsInput;

  @ApiProperty({
    required: false,
    type: () => OrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderWhereUniqueInput, {
    nullable: true,
  })
  ordersAppointmentsOrderIdToorders?: OrderWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutAppointmentsInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutAppointmentsInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutAppointmentsInput, {
    nullable: true,
  })
  ordersOrdersAppointmentIdToappointments?: OrderCreateNestedManyWithoutAppointmentsInput;

  @ApiProperty({
    required: true,
    type: () => TimeSlotWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TimeSlotWhereUniqueInput)
  @Field(() => TimeSlotWhereUniqueInput)
  timeSlots!: TimeSlotWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: () => UserProfileWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserProfileWhereUniqueInput)
  @Field(() => UserProfileWhereUniqueInput)
  userProfiles!: UserProfileWhereUniqueInput;
}

export { AppointmentCreateInput as AppointmentCreateInput };
