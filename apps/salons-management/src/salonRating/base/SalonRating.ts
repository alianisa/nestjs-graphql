/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsString,
  IsNumber,
  Max,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Decimal } from "decimal.js";
import { SalonRatingLike } from "../../salonRatingLike/base/SalonRatingLike";
import { Salon } from "../../salon/base/Salon";
import { UserProfile } from "../../userProfile/base/UserProfile";

@ObjectType()
class SalonRating {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt!: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Float)
  rating!: Decimal;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  review!: string | null;

  @ApiProperty({
    required: false,
    type: () => [SalonRatingLike],
  })
  @ValidateNested()
  @Type(() => SalonRatingLike)
  @IsOptional()
  salonRatingLikes?: Array<SalonRatingLike>;

  @ApiProperty({
    required: true,
    type: () => Salon,
  })
  @ValidateNested()
  @Type(() => Salon)
  salons?: Salon;

  @ApiProperty({
    required: false,
    type: () => UserProfile,
  })
  @ValidateNested()
  @Type(() => UserProfile)
  @IsOptional()
  userProfilesSalonRatingsUserIdTouserProfiles?: UserProfile | null;

  @ApiProperty({
    required: false,
    type: () => UserProfile,
  })
  @ValidateNested()
  @Type(() => UserProfile)
  @IsOptional()
  userProfilesSalonRatingsVoterIdTouserProfiles?: UserProfile | null;
}

export { SalonRating as SalonRating };
