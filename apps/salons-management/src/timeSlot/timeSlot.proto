syntax = "proto3";

                 package timeSlot;
service TimeSlotService {
 rpc createTimeSlot (TimeSlotCreateInput) returns (TimeSlot) {}
rpc timeSlots (findManyParams) returns (stream TimeSlot) {}
rpc timeSlot (TimeSlotWhereUniqueInput) returns (TimeSlot) {}
rpc updateTimeSlot (TimeSlotUpdateInput) returns (TimeSlot) {}
rpc deleteTimeSlot (TimeSlotWhereUniqueInput) returns (TimeSlot) {}
rpc findManyTimeSlots (TimeSlotWhereUniqueInput) returns (stream Appointment) {}
rpc updateTimeSlots (AppointmentParams) returns (stream Appointment) {}
rpc connectTimeSlots (AppointmentParams) returns (Appointment) {}
rpc disconnectTimeSlots (AppointmentParams) returns (Appointment) {} 
 }
message TimeSlotCreateInput {
repeated Appointment appointments = 1;
string createdAt = 2;
string endTime = 3;
string id = 4;
bool isAvailable = 5;
string slotDate = 6;
string slotTime = 7;
string startTime = 8;
string updatedAt = 9;
};
message TimeSlot {
repeated Appointment appointments = 1;
string createdAt = 2;
string endTime = 3;
string id = 4;
bool isAvailable = 5;
string slotDate = 6;
string slotTime = 7;
string startTime = 8;
string updatedAt = 9;
};
message TimeSlotWhereUniqueInput {
repeated Appointment appointments = 1;
string createdAt = 2;
string endTime = 3;
string id = 4;
bool isAvailable = 5;
string slotDate = 6;
string slotTime = 7;
string startTime = 8;
string updatedAt = 9;
};
message TimeSlotUpdateInput {
repeated Appointment appointments = 1;
string createdAt = 2;
string endTime = 3;
string id = 4;
bool isAvailable = 5;
string slotDate = 6;
string slotTime = 7;
string startTime = 8;
string updatedAt = 9;
};
message findManyParams {

};
message Appointment {
string appointmentDate = 1;
string employeeId = 2;
string id = 3;
};
message AppointmentWhereUniqueInput {
string appointmentDate = 1;
string employeeId = 2;
string id = 3;
};
message AppointmentParams {
TimeSlotWhereUniqueInput timeSlotWhereUniqueInput = 1;
AppointmentWhereUniqueInput appointmentWhereUniqueInput = 2;
};