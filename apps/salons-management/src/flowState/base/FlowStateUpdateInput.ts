/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumFlowStateCodeChallengeMethod } from "./EnumFlowStateCodeChallengeMethod";
import { SamlRelayStateUpdateManyWithoutFlowStatesInput } from "./SamlRelayStateUpdateManyWithoutFlowStatesInput";

@InputType()
class FlowStateUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authCode?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  authCodeIssuedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authenticationMethod?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codeChallenge?: string;

  @ApiProperty({
    required: false,
    enum: EnumFlowStateCodeChallengeMethod,
  })
  @IsEnum(EnumFlowStateCodeChallengeMethod)
  @IsOptional()
  @Field(() => EnumFlowStateCodeChallengeMethod, {
    nullable: true,
  })
  code_challenge_method?: "s256" | "plain";

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  providerAccessToken?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  providerRefreshToken?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  providerType?: string;

  @ApiProperty({
    required: false,
    type: () => SamlRelayStateUpdateManyWithoutFlowStatesInput,
  })
  @ValidateNested()
  @Type(() => SamlRelayStateUpdateManyWithoutFlowStatesInput)
  @IsOptional()
  @Field(() => SamlRelayStateUpdateManyWithoutFlowStatesInput, {
    nullable: true,
  })
  samlRelayStates?: SamlRelayStateUpdateManyWithoutFlowStatesInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userId?: string | null;
}

export { FlowStateUpdateInput as FlowStateUpdateInput };
