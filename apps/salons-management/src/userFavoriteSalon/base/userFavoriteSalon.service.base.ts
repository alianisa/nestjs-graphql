/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  UserFavoriteSalon as PrismaUserFavoriteSalon,
  Salon as PrismaSalon,
  UserProfile as PrismaUserProfile,
} from "@prisma/client";

export class UserFavoriteSalonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserFavoriteSalonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userFavoriteSalon.count(args);
  }

  async userFavoriteSalons(
    args: Prisma.UserFavoriteSalonFindManyArgs
  ): Promise<PrismaUserFavoriteSalon[]> {
    return this.prisma.userFavoriteSalon.findMany(args);
  }
  async userFavoriteSalon(
    args: Prisma.UserFavoriteSalonFindUniqueArgs
  ): Promise<PrismaUserFavoriteSalon | null> {
    return this.prisma.userFavoriteSalon.findUnique(args);
  }
  async createUserFavoriteSalon(
    args: Prisma.UserFavoriteSalonCreateArgs
  ): Promise<PrismaUserFavoriteSalon> {
    return this.prisma.userFavoriteSalon.create(args);
  }
  async updateUserFavoriteSalon(
    args: Prisma.UserFavoriteSalonUpdateArgs
  ): Promise<PrismaUserFavoriteSalon> {
    return this.prisma.userFavoriteSalon.update(args);
  }
  async deleteUserFavoriteSalon(
    args: Prisma.UserFavoriteSalonDeleteArgs
  ): Promise<PrismaUserFavoriteSalon> {
    return this.prisma.userFavoriteSalon.delete(args);
  }

  async getSalons(parentId: string): Promise<PrismaSalon | null> {
    return this.prisma.userFavoriteSalon
      .findUnique({
        where: { id: parentId },
      })
      .salons();
  }

  async getUserProfiles(parentId: string): Promise<PrismaUserProfile | null> {
    return this.prisma.userFavoriteSalon
      .findUnique({
        where: { id: parentId },
      })
      .userProfiles();
  }
}
