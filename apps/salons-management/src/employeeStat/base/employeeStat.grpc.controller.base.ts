/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import { GrpcMethod } from "@nestjs/microservices";
import { EmployeeStatService } from "../employeeStat.service";
import { EmployeeStatCreateInput } from "./EmployeeStatCreateInput";
import { EmployeeStatWhereInput } from "./EmployeeStatWhereInput";
import { EmployeeStatWhereUniqueInput } from "./EmployeeStatWhereUniqueInput";
import { EmployeeStatFindManyArgs } from "./EmployeeStatFindManyArgs";
import { EmployeeStatUpdateInput } from "./EmployeeStatUpdateInput";
import { EmployeeStat } from "./EmployeeStat";

export class EmployeeStatGrpcControllerBase {
  constructor(protected readonly service: EmployeeStatService) {}
  @common.Post()
  @swagger.ApiCreatedResponse({ type: EmployeeStat })
  @GrpcMethod("EmployeeStatService", "createEmployeeStat")
  async createEmployeeStat(
    @common.Body() data: EmployeeStatCreateInput
  ): Promise<EmployeeStat> {
    return await this.service.createEmployeeStat({
      data: {
        ...data,

        salons: {
          connect: data.salons,
        },

        userProfiles: {
          connect: data.userProfiles,
        },
      },
      select: {
        averageOrderAmount: true,
        averageOrderDuration: true,
        averageRating: true,
        averageServiceTime: true,
        canceledOrdersCount: true,
        cardPaymentsAmount: true,
        cashPaymentsAmount: true,
        consistencyScore: true,
        conversionRate: true,
        createdAt: true,
        currentMonthOrders: true,
        currentMonthRevenue: true,
        efficiencyChangePercent: true,
        efficiencyRate: true,
        efficiencyScore: true,
        efficiencyTrend: true,
        executionRate: true,
        fillRate: true,
        id: true,
        lastOrderAt: true,
        negativeReviews: true,
        ordersChangePercent: true,
        ordersGrowthRate: true,
        ordersPerDay: true,
        ordersTrend: true,
        overtimeCount: true,
        peakHoursOrders: true,
        peakPerformanceRate: true,
        performanceChangePercent: true,
        performanceScore: true,
        performanceTrend: true,
        positiveReviews: true,
        prevMonthEfficiencyRate: true,
        prevMonthPerformanceScore: true,
        prevMonthTotalOrders: true,
        prevMonthTotalRevenue: true,
        previousMonthOrders: true,
        previousMonthRevenue: true,
        qualityScore: true,
        rating: true,
        ratingChangePercent: true,
        ratingTrend: true,
        revenueChangePercent: true,
        revenueGrowthRate: true,
        revenuePerHour: true,
        revenueTrend: true,

        salons: {
          select: {
            id: true,
          },
        },

        servicesChangePercent: true,
        servicesGrowthRate: true,
        servicesPerHour: true,
        servicesTrend: true,
        totalDowntimeHours: true,
        totalExecutionTime: true,
        totalIdleTime: true,
        totalOrders: true,
        totalRatings: true,
        totalRevenue: true,
        totalServices: true,
        totalWorkTime: true,
        totalWorkedHours: true,
        updatedAt: true,

        userProfiles: {
          select: {
            id: true,
          },
        },

        utilizationRate: true,
        workloadPercentage: true,
        yearToDateOrders: true,
        yearToDateRevenue: true,
        yearToDateServices: true,
      },
    });
  }

  @common.Get()
  @swagger.ApiOkResponse({ type: [EmployeeStat] })
  @ApiNestedQuery(EmployeeStatFindManyArgs)
  @GrpcMethod("EmployeeStatService", "employeeStats")
  async employeeStats(@common.Req() request: Request): Promise<EmployeeStat[]> {
    const args = plainToClass(EmployeeStatFindManyArgs, request.query);
    return this.service.employeeStats({
      ...args,
      select: {
        averageOrderAmount: true,
        averageOrderDuration: true,
        averageRating: true,
        averageServiceTime: true,
        canceledOrdersCount: true,
        cardPaymentsAmount: true,
        cashPaymentsAmount: true,
        consistencyScore: true,
        conversionRate: true,
        createdAt: true,
        currentMonthOrders: true,
        currentMonthRevenue: true,
        efficiencyChangePercent: true,
        efficiencyRate: true,
        efficiencyScore: true,
        efficiencyTrend: true,
        executionRate: true,
        fillRate: true,
        id: true,
        lastOrderAt: true,
        negativeReviews: true,
        ordersChangePercent: true,
        ordersGrowthRate: true,
        ordersPerDay: true,
        ordersTrend: true,
        overtimeCount: true,
        peakHoursOrders: true,
        peakPerformanceRate: true,
        performanceChangePercent: true,
        performanceScore: true,
        performanceTrend: true,
        positiveReviews: true,
        prevMonthEfficiencyRate: true,
        prevMonthPerformanceScore: true,
        prevMonthTotalOrders: true,
        prevMonthTotalRevenue: true,
        previousMonthOrders: true,
        previousMonthRevenue: true,
        qualityScore: true,
        rating: true,
        ratingChangePercent: true,
        ratingTrend: true,
        revenueChangePercent: true,
        revenueGrowthRate: true,
        revenuePerHour: true,
        revenueTrend: true,

        salons: {
          select: {
            id: true,
          },
        },

        servicesChangePercent: true,
        servicesGrowthRate: true,
        servicesPerHour: true,
        servicesTrend: true,
        totalDowntimeHours: true,
        totalExecutionTime: true,
        totalIdleTime: true,
        totalOrders: true,
        totalRatings: true,
        totalRevenue: true,
        totalServices: true,
        totalWorkTime: true,
        totalWorkedHours: true,
        updatedAt: true,

        userProfiles: {
          select: {
            id: true,
          },
        },

        utilizationRate: true,
        workloadPercentage: true,
        yearToDateOrders: true,
        yearToDateRevenue: true,
        yearToDateServices: true,
      },
    });
  }

  @common.Get("/:id")
  @swagger.ApiOkResponse({ type: EmployeeStat })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod("EmployeeStatService", "employeeStat")
  async employeeStat(
    @common.Param() params: EmployeeStatWhereUniqueInput
  ): Promise<EmployeeStat | null> {
    const result = await this.service.employeeStat({
      where: params,
      select: {
        averageOrderAmount: true,
        averageOrderDuration: true,
        averageRating: true,
        averageServiceTime: true,
        canceledOrdersCount: true,
        cardPaymentsAmount: true,
        cashPaymentsAmount: true,
        consistencyScore: true,
        conversionRate: true,
        createdAt: true,
        currentMonthOrders: true,
        currentMonthRevenue: true,
        efficiencyChangePercent: true,
        efficiencyRate: true,
        efficiencyScore: true,
        efficiencyTrend: true,
        executionRate: true,
        fillRate: true,
        id: true,
        lastOrderAt: true,
        negativeReviews: true,
        ordersChangePercent: true,
        ordersGrowthRate: true,
        ordersPerDay: true,
        ordersTrend: true,
        overtimeCount: true,
        peakHoursOrders: true,
        peakPerformanceRate: true,
        performanceChangePercent: true,
        performanceScore: true,
        performanceTrend: true,
        positiveReviews: true,
        prevMonthEfficiencyRate: true,
        prevMonthPerformanceScore: true,
        prevMonthTotalOrders: true,
        prevMonthTotalRevenue: true,
        previousMonthOrders: true,
        previousMonthRevenue: true,
        qualityScore: true,
        rating: true,
        ratingChangePercent: true,
        ratingTrend: true,
        revenueChangePercent: true,
        revenueGrowthRate: true,
        revenuePerHour: true,
        revenueTrend: true,

        salons: {
          select: {
            id: true,
          },
        },

        servicesChangePercent: true,
        servicesGrowthRate: true,
        servicesPerHour: true,
        servicesTrend: true,
        totalDowntimeHours: true,
        totalExecutionTime: true,
        totalIdleTime: true,
        totalOrders: true,
        totalRatings: true,
        totalRevenue: true,
        totalServices: true,
        totalWorkTime: true,
        totalWorkedHours: true,
        updatedAt: true,

        userProfiles: {
          select: {
            id: true,
          },
        },

        utilizationRate: true,
        workloadPercentage: true,
        yearToDateOrders: true,
        yearToDateRevenue: true,
        yearToDateServices: true,
      },
    });
    if (result === null) {
      throw new errors.NotFoundException(
        `No resource was found for ${JSON.stringify(params)}`
      );
    }
    return result;
  }

  @common.Patch("/:id")
  @swagger.ApiOkResponse({ type: EmployeeStat })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod("EmployeeStatService", "updateEmployeeStat")
  async updateEmployeeStat(
    @common.Param() params: EmployeeStatWhereUniqueInput,
    @common.Body() data: EmployeeStatUpdateInput
  ): Promise<EmployeeStat | null> {
    try {
      return await this.service.updateEmployeeStat({
        where: params,
        data: {
          ...data,

          salons: {
            connect: data.salons,
          },

          userProfiles: {
            connect: data.userProfiles,
          },
        },
        select: {
          averageOrderAmount: true,
          averageOrderDuration: true,
          averageRating: true,
          averageServiceTime: true,
          canceledOrdersCount: true,
          cardPaymentsAmount: true,
          cashPaymentsAmount: true,
          consistencyScore: true,
          conversionRate: true,
          createdAt: true,
          currentMonthOrders: true,
          currentMonthRevenue: true,
          efficiencyChangePercent: true,
          efficiencyRate: true,
          efficiencyScore: true,
          efficiencyTrend: true,
          executionRate: true,
          fillRate: true,
          id: true,
          lastOrderAt: true,
          negativeReviews: true,
          ordersChangePercent: true,
          ordersGrowthRate: true,
          ordersPerDay: true,
          ordersTrend: true,
          overtimeCount: true,
          peakHoursOrders: true,
          peakPerformanceRate: true,
          performanceChangePercent: true,
          performanceScore: true,
          performanceTrend: true,
          positiveReviews: true,
          prevMonthEfficiencyRate: true,
          prevMonthPerformanceScore: true,
          prevMonthTotalOrders: true,
          prevMonthTotalRevenue: true,
          previousMonthOrders: true,
          previousMonthRevenue: true,
          qualityScore: true,
          rating: true,
          ratingChangePercent: true,
          ratingTrend: true,
          revenueChangePercent: true,
          revenueGrowthRate: true,
          revenuePerHour: true,
          revenueTrend: true,

          salons: {
            select: {
              id: true,
            },
          },

          servicesChangePercent: true,
          servicesGrowthRate: true,
          servicesPerHour: true,
          servicesTrend: true,
          totalDowntimeHours: true,
          totalExecutionTime: true,
          totalIdleTime: true,
          totalOrders: true,
          totalRatings: true,
          totalRevenue: true,
          totalServices: true,
          totalWorkTime: true,
          totalWorkedHours: true,
          updatedAt: true,

          userProfiles: {
            select: {
              id: true,
            },
          },

          utilizationRate: true,
          workloadPercentage: true,
          yearToDateOrders: true,
          yearToDateRevenue: true,
          yearToDateServices: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }

  @common.Delete("/:id")
  @swagger.ApiOkResponse({ type: EmployeeStat })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod("EmployeeStatService", "deleteEmployeeStat")
  async deleteEmployeeStat(
    @common.Param() params: EmployeeStatWhereUniqueInput
  ): Promise<EmployeeStat | null> {
    try {
      return await this.service.deleteEmployeeStat({
        where: params,
        select: {
          averageOrderAmount: true,
          averageOrderDuration: true,
          averageRating: true,
          averageServiceTime: true,
          canceledOrdersCount: true,
          cardPaymentsAmount: true,
          cashPaymentsAmount: true,
          consistencyScore: true,
          conversionRate: true,
          createdAt: true,
          currentMonthOrders: true,
          currentMonthRevenue: true,
          efficiencyChangePercent: true,
          efficiencyRate: true,
          efficiencyScore: true,
          efficiencyTrend: true,
          executionRate: true,
          fillRate: true,
          id: true,
          lastOrderAt: true,
          negativeReviews: true,
          ordersChangePercent: true,
          ordersGrowthRate: true,
          ordersPerDay: true,
          ordersTrend: true,
          overtimeCount: true,
          peakHoursOrders: true,
          peakPerformanceRate: true,
          performanceChangePercent: true,
          performanceScore: true,
          performanceTrend: true,
          positiveReviews: true,
          prevMonthEfficiencyRate: true,
          prevMonthPerformanceScore: true,
          prevMonthTotalOrders: true,
          prevMonthTotalRevenue: true,
          previousMonthOrders: true,
          previousMonthRevenue: true,
          qualityScore: true,
          rating: true,
          ratingChangePercent: true,
          ratingTrend: true,
          revenueChangePercent: true,
          revenueGrowthRate: true,
          revenuePerHour: true,
          revenueTrend: true,

          salons: {
            select: {
              id: true,
            },
          },

          servicesChangePercent: true,
          servicesGrowthRate: true,
          servicesPerHour: true,
          servicesTrend: true,
          totalDowntimeHours: true,
          totalExecutionTime: true,
          totalIdleTime: true,
          totalOrders: true,
          totalRatings: true,
          totalRevenue: true,
          totalServices: true,
          totalWorkTime: true,
          totalWorkedHours: true,
          updatedAt: true,

          userProfiles: {
            select: {
              id: true,
            },
          },

          utilizationRate: true,
          workloadPercentage: true,
          yearToDateOrders: true,
          yearToDateRevenue: true,
          yearToDateServices: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }
}
